asyncapi: 2.6.0
id: urn:com:example:dicom:ups-rs:api
info:
  title: DICOM UPS-RS WebSocket API
  version: 1.0.0
  description: AsyncAPI 2.6.0 specification for UPS-RS WebSocket-based subscription and notification
  contact:
    name: API Support
    url: https://www.example.com/support
    email: support@example.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0

defaultContentType: application/json

tags:
  - name: UPS
    description: Unified Procedure Step
  - name: DICOM
    description: Digital Imaging and Communications in Medicine

servers:
  production:
    url: example.com/ups-rs
    protocol: wss
    description: Production UPS-RS WebSocket server

channels:
  /workitems/subscription:
    subscribe:
      operationId: subscribeToWorkitems
      summary: Subscribe to UPS Workitem events
      message:
        $ref: '#/components/messages/SubscriptionRequest'
    publish:
      operationId: receiveWorkitemNotifications
      summary: Receive UPS Workitem event notifications
      message:
        $ref: '#/components/messages/GeneralEventNotification'

  /workitems/subscription/{subscriptionUID}:
    parameters:
      subscriptionUID:
        $ref: '#/components/parameters/subscriptionUID'
    publish:
      operationId: receiveSpecificSubscriptionNotifications
      summary: Receive UPS Workitem event notifications for a specific subscription
      message:
        $ref: '#/components/messages/SpecificEventNotification'
    subscribe:
      operationId: unsubscribeFromWorkitems
      summary: Unsubscribe from UPS Workitem events
      message:
        $ref: '#/components/messages/UnsubscriptionRequest'

components:
  parameters:
    subscriptionUID:
      description: Unique identifier for the subscription
      schema:
        type: string

  messages:
    SubscriptionRequest:
      name: SubscriptionRequest
      title: UPS Workitem Subscription Request
      messageId: ups.workitem.subscription.request
      payload:
        $ref: '#/components/schemas/SubscriptionRequestPayload'

    UnsubscriptionRequest:
      name: UnsubscriptionRequest
      title: UPS Workitem Unsubscription Request
      messageId: ups.workitem.unsubscription.request
      payload:
        $ref: '#/components/schemas/UnsubscriptionRequestPayload'

    GeneralEventNotification:
      name: GeneralEventNotification
      title: General UPS Workitem Event Notification
      messageId: ups.workitem.event.notification.general
      payload:
        $ref: '#/components/schemas/EventNotificationPayload'

    SpecificEventNotification:
      name: SpecificEventNotification
      title: Specific UPS Workitem Event Notification
      messageId: ups.workitem.event.notification.specific
      payload:
        $ref: '#/components/schemas/EventNotificationPayload'

  schemas:
    SubscriptionRequestPayload:
      type: object
      required:
        - filter
      properties:
        filter:
          type: object
          properties:
            worklistLabel:
              type: string
            procedureStepState:
              type: string
              enum: [SCHEDULED, IN PROGRESS, COMPLETED, CANCELED]
            scheduledStationAETitle:
              type: string
            performerAETitle:
              type: string
        deleteSubscription:
          type: boolean
          description: If true, delete any existing subscriptions matching the filter

    UnsubscriptionRequestPayload:
      type: object
      required:
        - reason
      properties:
        reason:
          type: string
          enum: [USER_REQUEST, CONNECTION_CLOSURE]
        subscriptionUID:
          type: string

    EventNotificationPayload:
      type: object
      required:
        - eventType
        - workitemUID
      properties:
        eventType:
          type: string
          enum: [CREATED, UPDATED, STATE_REPORT, CANCELED, COMPLETED]
        workitemUID:
          type: string
        subscriptionUID:
          type: string
        procedureStepState:
          type: string
          enum: [SCHEDULED, IN PROGRESS, COMPLETED, CANCELED]
        progressInformation:
          type: object
          properties:
            numberOfCompletedSuboperations:
              type: integer
            numberOfFailedSuboperations:
              type: integer
            numberOfWarningSuboperations:
              type: integer
            numberOfRemainingSuboperations:
              type: integer
        cancellationReason:
          type: string
        workitem:
          $ref: '#/components/schemas/Workitem'

    Workitem:
      type: object
      required:
        - workitemUID
        - procedureStepState
        - scheduledProcedureStepStartDateTime
        - scheduledWorkitemCodeSequence
        - inputInformationSequence
      properties:
        workitemUID:
          type: string
        procedureStepState:
          type: string
          enum: [SCHEDULED, IN PROGRESS, COMPLETED, CANCELED]
        scheduledProcedureStepStartDateTime:
          type: string
          format: date-time
        scheduledWorkitemCodeSequence:
          $ref: '#/components/schemas/CodeSequence'
        inputInformationSequence:
          type: array
          items:
            type: object
            properties:
              studyInstanceUID:
                type: string
              seriesInstanceUID:
                type: string
        scheduledStationNameCodeSequence:
          $ref: '#/components/schemas/CodeSequence'
        scheduledStationClassCodeSequence:
          $ref: '#/components/schemas/CodeSequence'
        scheduledStationGeographicLocationCodeSequence:
          $ref: '#/components/schemas/CodeSequence'
        scheduledHumanPerformersSequence:
          type: array
          items:
            type: object
            properties:
              humanPerformerCodeSequence:
                $ref: '#/components/schemas/CodeSequence'
              humanPerformerName:
                type: string
        scheduledProcedureStepDescription:
          type: string
        scheduledProtocolCodeSequence:
          $ref: '#/components/schemas/CodeSequence'
        referencedRequestSequence:
          type: array
          items:
            type: object
            properties:
              studyInstanceUID:
                type: string
              accessionNumber:
                type: string
              requestedProcedureID:
                type: string
              requestedProcedureDescription:
                type: string

    CodeSequence:
      type: object
      required:
        - codeValue
        - codingSchemeDesignator
        - codeMeaning
      properties:
        codeValue:
          type: string
        codingSchemeDesignator:
          type: string
        codeMeaning:
          type: string
